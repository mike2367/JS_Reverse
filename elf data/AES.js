
data = ''


const crypto = require('crypto-js');
    // Start of Selection
    function decrypt_(data) {
    j = "DXZWdxUZ5jgsUFPF"
    z = crypto.enc.Utf8.parse(j);
    var e = crypto.AES.decrypt(data, z, {
        iv: crypto.enc.Utf8.parse(j.substr(0, 16)),
        mode: crypto.mode.ECB,
        padding: crypto.pad.Pkcs7
    });
    return JSON.parse(e.toString(crypto.enc.Utf8))
}

// console.log(decrypt(data))